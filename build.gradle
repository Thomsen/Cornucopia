println 'lifecycle cornucopia build start'

//noinspection GradleIdeError
// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    // before than other script execute

    ext.versions = [
            'copiaTools'        : '0.0.1',
            'kotlin'            : '1.2.50',
            'androidGradle'     : '3.1.3',

            'buildTools'        : '26.1.0',
            'supportLibrary'    : '27.1.1',
            'aac'               : '1.1.0'
    ]

    ext.deps = [
        plugin : [
                'gradle'       : "com.android.tools.build:gradle:${versions.androidGradle}"
        ],

        android : [

        ],

        support : [
                'appCompat'    : "com.android.support:appcompat-v7:${versions.buildTools}"
        ],

        kotlin : [

        ]
    ]


    repositories {
        jcenter()
        google()
        mavenCentral()
        //
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        //maven { url "https://maven.eveoh.nl/content/repositories/releases/" }
        maven { url "https://plugins.gradle.org/m2/"}

        maven { url uri('./repo') }
    }
    dependencies {

        // Could not get unknown property 'packageForR' for task ':copia-app:processDebugResources'
        // gradle 3.1.0 with butterknife conflict

        classpath deps.plugin.gradle
//        classpath 'com.andriod.tools.build:gradle-experimental:0.9.1'

        classpath "io.realm:realm-gradle-plugin:3.0.0"
        //classpath "nl.eveoh:gradle-aspectj:1.6"  // maven.eveo.nl
        classpath "gradle.plugin.aspectj:gradle-aspectj:0.1.6"

        classpath 'org.aspectj:aspectjtools:1.8.9'
        classpath 'org.aspectj:aspectjweaver:1.8.9'

        classpath "com.jakewharton:butterknife-gradle-plugin:9.0.0-SNAPSHOT"

        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"

        //classpath "org.codehaus.groovy:groovy-all:2.4.10"

        // upload jcenter
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'
        classpath 'com.github.dcendents:android-maven-plugin:1.2'

        classpath "com.cornucopia.tools:copia-tools:${versions.copiaTools}"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        //mavenLocal()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://maven.google.com" }
        //
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        //maven { url "https://maven.eveoh.nl/content/repositories/releases/" }
    }
}

project.ext {
    aspectjVersion = '1.8.10'
}

//apply plugin: 'aspectj'

//dependencies {
//    aspectpath "org.springframework:spring-aspects:4.3.7.RELEASE"
//}


ext {
    // D8: Static interface methods are only supported starting with Android N (--min-api 24)
    // java version 8 (Supplier Predicate Function ...) need --min-api 24

    minSdkVer = 24  // android 7.0
    targetSdkVer = 26
    compileSdkVersion = 26
    buildToolsVersion = '26.1.0'


    // ERROR in com.android.tools.r8.com.google.common.io.CharSource.lines:()Ljava/util/stream/Stream;
    // : invalid opcode ba - invokedynamic requires --min-sdk-version >= 26 (currently 23)

    // https://developer.android.com/studio/write/java8-support

    javaVersion = JavaVersion.VERSION_1_8

    supportLibVersion = '27.1.1'

    butternifeVersion = '9.0.0-SNAPSHOT'
}

boolean isDebug() {
    boolean ret = false
    try {
        Properties properties = new Properties()
        File file = project.rootProject.file('local.properties')
        if (!file.exists()) {
            return false
        }
        properties.load(file.newDataInputStream())
        String debugStr = properties.getProperty("debug")
        if (debugStr != null && debugStr.length() > 0) {
            ret = debugStr.toBoolean()
        }
    } catch (Throwable throwable) {
        throwable.printStackTrace()
        ret = false
    }
    project.logger.error("[${project.name}]Debug:${ret}")
    return ret
}
